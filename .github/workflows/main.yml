name: Combined Deployment and IPFS Save
on:
  push:
    branches:
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and package WAR file
        run: |
          jar cvf borisp2.war *
        # No need for working-directory if source code is in the root

      - name: Copy file to AWS server via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          source: "borisp2.war"
          target: "/opt/tomcat/webapps"

  SaveToIPFS:
    needs: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and package WAR file
        run: |
          jar cvf fichier.war *
        # No need for working-directory if source code is in the root

      - name: Set up Alpine for IPFS
        uses: jirutka/setup-alpine@v1
        with:
          branch: v3.15

      - name: Install and start IPFS
        run: |
          apk add go-ipfs
          ipfs init
          ipfs daemon &
        shell: alpine.sh --root {0}

      - name: Save file to IPFS
        run: |
          ls -la 
          ipfs swarm peers
          ipfs add fichier.war
        shell: alpine.sh --root {0}

      - name: Install client MySQL
        run: |
          apk add mysql mysql-client
        shell: alpine.sh --root {0}

      - name: CrÃ©ation d'un tunnel entre AWS et l'instance local
        run: |
          echo ${{ secrets.EC2_SSH_KEY }} > private_key.pem
          ssh -i private_key.pem ${{ secrets.USERNAME }}@${{ secrets.HOST_DNS }} -fN -L 0.0.0.0:3307:127.0.0.1:3306
          mysqldump -ucnam -P3307 -p"${{ secrets.MYSQLDUMP_PASSWORD }}" films > sauvegarde_films.sql
          ls
        shell: alpine.sh --root {0}
